name: Run Tests and Coverage on Commit

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  fantamd-be-tests:
    runs-on: ubuntu-latest

    concurrency:
      group: fantamd-be-tests
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./fantamd-be

    permissions:
      contents: read
      pull-requests: write
        
    steps:
      - uses: actions/checkout@v5
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: fantamd-be/package-lock.json
          
      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present
      
      - name: Run tests with coverage and containers
        run: npm run test:run

      - name: 'Report Coverage'
        if: always()
        uses:  davelosert/vitest-coverage-report-action@v2
        with: 
          working-directory: ./fantamd-be
        
  fantamd-fe-tests:
    runs-on: ubuntu-latest

    concurrency:
      group: fantamd-fe-tests
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./fantamd-fe

    permissions:
      contents: read
      pull-requests: write
        
    steps:
      - uses: actions/checkout@v5
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: fantamd-fe/package-lock.json
          
      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present
      
      - name: Run tests with coverage and containers
        run: npm run test:run
      
      - name: 'Report Coverage'
        if: always()
        uses:  davelosert/vitest-coverage-report-action@v2
        with: 
          working-directory: ./fantamd-fe

  fantamd-e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    concurrency:
      group: fantamd-e2e
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-node@v4
      with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: fantamd-fe/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: ./fantamd-fe

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Start services with Docker Compose
      run: |
        docker compose -f docker-compose.ci.yml up -d --build
        docker compose ps

    
    # Wait for the app to be actually ready (in addition to Docker healthcheck)
    - name: Wait for app to be ready
      run: |
        for i in {1..60}; do
          if curl -fsS http://localhost:3000 >/dev/null; then
            echo "App is ready"; exit 0
          fi
          echo "Waiting for app... ($i/60)"; sleep 2
        done
        echo "App not ready in time" >&2
        docker compose logs
        exit 1

    - name: Run Playwright tests
      run: npm run test:e2e
      working-directory: ./fantamd-fe
      
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        working-directory: ./fantamd-fe

    
    - name: Shutdown Docker Compose
      if: always()
      run: docker compose down -v
